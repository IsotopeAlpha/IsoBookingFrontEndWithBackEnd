{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar toInteger = require('../internals/to-integer');\n\nvar thisNumberValue = require('../internals/this-number-value');\n\nvar repeat = require('../internals/string-repeat');\n\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  }\n\n  return n;\n};\n\nvar FORCED = nativeToFixed && (0.00008.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || 1000000000000000128.0.toFixed(0) !== '1000000000000000128') || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n}); // `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n\n$({\n  target: 'Number',\n  proto: true,\n  forced: FORCED\n}, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = c % n * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      }\n\n      return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits'); // eslint-disable-next-line no-self-compare\n\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits ? '0.' + repeat.call('0', fractDigits - k) + result : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    }\n\n    return result;\n  }\n});","map":{"version":3,"names":["$","require","toInteger","thisNumberValue","repeat","fails","nativeToFixed","toFixed","floor","Math","pow","x","n","acc","log","x2","FORCED","call","target","proto","forced","fractionDigits","number","fractDigits","data","sign","result","e","z","j","k","multiply","c","index","c2","divide","dataToString","s","t","String","length","RangeError","slice"],"sources":["/Users/israelgayina/Documents/bookingApp/client/node_modules/core-js/modules/es.number.to-fixed.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}