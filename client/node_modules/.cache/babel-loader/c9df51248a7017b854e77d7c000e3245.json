{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar toInteger = require('../internals/to-integer');\n\nvar parseInt = require('../internals/number-parse-int');\n\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar valid = /^[\\da-z]+$/; // `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n\n$({\n  target: 'Number',\n  stat: true\n}, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n\n    if (string.charAt(0) == '-') {\n      sign = -1;\n      string = string.slice(1);\n      if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n\n    R = radix === undefined ? 10 : toInteger(radix);\n    if (R < 2 || R > 36) throw RangeError(INVALID_RADIX);\n\n    if (!valid.test(string) || (mathNum = parseInt(string, R)).toString(R) !== string) {\n      throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n\n    return sign * mathNum;\n  }\n});","map":{"version":3,"names":["$","require","toInteger","parseInt","INVALID_NUMBER_REPRESENTATION","INVALID_RADIX","valid","target","stat","fromString","string","radix","sign","R","mathNum","TypeError","length","SyntaxError","charAt","slice","undefined","RangeError","test","toString"],"sources":["/Users/israelgayina/Documents/bookingApp/client/node_modules/core-js/modules/esnext.number.from-string.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar parseInt = require('../internals/number-parse-int');\n\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar valid = /^[\\da-z]+$/;\n\n// `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n$({ target: 'Number', stat: true }, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    if (string.charAt(0) == '-') {\n      sign = -1;\n      string = string.slice(1);\n      if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    R = radix === undefined ? 10 : toInteger(radix);\n    if (R < 2 || R > 36) throw RangeError(INVALID_RADIX);\n    if (!valid.test(string) || (mathNum = parseInt(string, R)).toString(R) !== string) {\n      throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    return sign * mathNum;\n  }\n});\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,+BAAD,CAAtB;;AAEA,IAAIG,6BAA6B,GAAG,+BAApC;AACA,IAAIC,aAAa,GAAG,eAApB;AACA,IAAIC,KAAK,GAAG,YAAZ,C,CAEA;AACA;;AACAN,CAAC,CAAC;EAAEO,MAAM,EAAE,QAAV;EAAoBC,IAAI,EAAE;AAA1B,CAAD,EAAmC;EAClCC,UAAU,EAAE,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,KAA5B,EAAmC;IAC7C,IAAIC,IAAI,GAAG,CAAX;IACA,IAAIC,CAAJ,EAAOC,OAAP;IACA,IAAI,OAAOJ,MAAP,IAAiB,QAArB,EAA+B,MAAMK,SAAS,CAACX,6BAAD,CAAf;IAC/B,IAAI,CAACM,MAAM,CAACM,MAAZ,EAAoB,MAAMC,WAAW,CAACb,6BAAD,CAAjB;;IACpB,IAAIM,MAAM,CAACQ,MAAP,CAAc,CAAd,KAAoB,GAAxB,EAA6B;MAC3BN,IAAI,GAAG,CAAC,CAAR;MACAF,MAAM,GAAGA,MAAM,CAACS,KAAP,CAAa,CAAb,CAAT;MACA,IAAI,CAACT,MAAM,CAACM,MAAZ,EAAoB,MAAMC,WAAW,CAACb,6BAAD,CAAjB;IACrB;;IACDS,CAAC,GAAGF,KAAK,KAAKS,SAAV,GAAsB,EAAtB,GAA2BlB,SAAS,CAACS,KAAD,CAAxC;IACA,IAAIE,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,EAAjB,EAAqB,MAAMQ,UAAU,CAAChB,aAAD,CAAhB;;IACrB,IAAI,CAACC,KAAK,CAACgB,IAAN,CAAWZ,MAAX,CAAD,IAAuB,CAACI,OAAO,GAAGX,QAAQ,CAACO,MAAD,EAASG,CAAT,CAAnB,EAAgCU,QAAhC,CAAyCV,CAAzC,MAAgDH,MAA3E,EAAmF;MACjF,MAAMO,WAAW,CAACb,6BAAD,CAAjB;IACD;;IACD,OAAOQ,IAAI,GAAGE,OAAd;EACD;AAjBiC,CAAnC,CAAD"},"metadata":{},"sourceType":"script"}