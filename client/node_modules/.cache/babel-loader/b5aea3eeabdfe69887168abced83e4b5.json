{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar bind = require('../internals/function-bind-context');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar getSetIterator = require('../internals/get-set-iterator');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.map` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  map: function map(callbackfn\n  /* , thisArg */\n  ) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var adder = aFunction(newSet.add);\n    iterate(iterator, function (value) {\n      adder.call(newSet, boundFunction(value, value, set));\n    }, undefined, false, true);\n    return newSet;\n  }\n});","map":{"version":3,"names":["$","require","IS_PURE","getBuiltIn","anObject","aFunction","bind","speciesConstructor","getSetIterator","iterate","target","proto","real","forced","map","callbackfn","set","iterator","boundFunction","arguments","length","undefined","newSet","adder","add","value","call"],"sources":["/Users/israelgayina/Documents/bookingApp/client/node_modules/core-js/modules/esnext.set.map.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.map` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  map: function map(callbackfn /* , thisArg */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var adder = aFunction(newSet.add);\n    iterate(iterator, function (value) {\n      adder.call(newSet, boundFunction(value, value, set));\n    }, undefined, false, true);\n    return newSet;\n  }\n});\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,oCAAD,CAAlB;;AACA,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIO,cAAc,GAAGP,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;EAAEU,MAAM,EAAE,KAAV;EAAiBC,KAAK,EAAE,IAAxB;EAA8BC,IAAI,EAAE,IAApC;EAA0CC,MAAM,EAAEX;AAAlD,CAAD,EAA8D;EAC7DY,GAAG,EAAE,SAASA,GAAT,CAAaC;EAAW;EAAxB,EAAyC;IAC5C,IAAIC,GAAG,GAAGZ,QAAQ,CAAC,IAAD,CAAlB;IACA,IAAIa,QAAQ,GAAGT,cAAc,CAACQ,GAAD,CAA7B;IACA,IAAIE,aAAa,GAAGZ,IAAI,CAACS,UAAD,EAAaI,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAnD,EAA8D,CAA9D,CAAxB;IACA,IAAIC,MAAM,GAAG,KAAKf,kBAAkB,CAACS,GAAD,EAAMb,UAAU,CAAC,KAAD,CAAhB,CAAvB,GAAb;IACA,IAAIoB,KAAK,GAAGlB,SAAS,CAACiB,MAAM,CAACE,GAAR,CAArB;IACAf,OAAO,CAACQ,QAAD,EAAW,UAAUQ,KAAV,EAAiB;MACjCF,KAAK,CAACG,IAAN,CAAWJ,MAAX,EAAmBJ,aAAa,CAACO,KAAD,EAAQA,KAAR,EAAeT,GAAf,CAAhC;IACD,CAFM,EAEJK,SAFI,EAEO,KAFP,EAEc,IAFd,CAAP;IAGA,OAAOC,MAAP;EACD;AAX4D,CAA9D,CAAD"},"metadata":{},"sourceType":"script"}