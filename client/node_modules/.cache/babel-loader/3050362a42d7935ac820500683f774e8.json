{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  intersection: function intersection(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var hasCheck = aFunction(set.has);\n    var adder = aFunction(newSet.add);\n    iterate(iterable, function (value) {\n      if (hasCheck.call(set, value)) adder.call(newSet, value);\n    });\n    return newSet;\n  }\n});","map":{"version":3,"names":["$","require","IS_PURE","getBuiltIn","anObject","aFunction","speciesConstructor","iterate","target","proto","real","forced","intersection","iterable","set","newSet","hasCheck","has","adder","add","value","call"],"sources":["/Users/israelgayina/Documents/bookingApp/client/node_modules/core-js/modules/esnext.set.intersection.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  intersection: function intersection(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var hasCheck = aFunction(set.has);\n    var adder = aFunction(newSet.add);\n    iterate(iterable, function (value) {\n      if (hasCheck.call(set, value)) adder.call(newSet, value);\n    });\n    return newSet;\n  }\n});\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;EAAEQ,MAAM,EAAE,KAAV;EAAiBC,KAAK,EAAE,IAAxB;EAA8BC,IAAI,EAAE,IAApC;EAA0CC,MAAM,EAAET;AAAlD,CAAD,EAA8D;EAC7DU,YAAY,EAAE,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;IAC5C,IAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;IACA,IAAIW,MAAM,GAAG,KAAKT,kBAAkB,CAACQ,GAAD,EAAMX,UAAU,CAAC,KAAD,CAAhB,CAAvB,GAAb;IACA,IAAIa,QAAQ,GAAGX,SAAS,CAACS,GAAG,CAACG,GAAL,CAAxB;IACA,IAAIC,KAAK,GAAGb,SAAS,CAACU,MAAM,CAACI,GAAR,CAArB;IACAZ,OAAO,CAACM,QAAD,EAAW,UAAUO,KAAV,EAAiB;MACjC,IAAIJ,QAAQ,CAACK,IAAT,CAAcP,GAAd,EAAmBM,KAAnB,CAAJ,EAA+BF,KAAK,CAACG,IAAN,CAAWN,MAAX,EAAmBK,KAAnB;IAChC,CAFM,CAAP;IAGA,OAAOL,MAAP;EACD;AAV4D,CAA9D,CAAD"},"metadata":{},"sourceType":"script"}