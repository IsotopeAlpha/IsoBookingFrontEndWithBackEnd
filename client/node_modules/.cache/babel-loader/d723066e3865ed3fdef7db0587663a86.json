{"ast":null,"code":"'use strict'; // based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\n\nvar delimiter = '-'; // '\\x2D'\n\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\n\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\n\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n};\n/**\n * Converts a digit/integer into a basic code point.\n */\n\n\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\n\n\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\n\n\nvar encode = function (input) {\n  var output = []; // Convert the input in UCS-2 to an array of Unicode code points.\n\n  input = ucs2decode(input); // Cache the length.\n\n  var inputLength = input.length; // Initialize the state.\n\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue; // Handle the basic code points.\n\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n\n  var handledCPCount = basicLength; // number of code points that have been handled;\n  // Finish the basic string with a delimiter unless it's empty.\n\n  if (basicLength) {\n    output.push(delimiter);\n  } // Main encoding loop:\n\n\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n\n\n    var handledCPCountPlusOne = handledCPCount + 1;\n\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n\n        for (var k = base;; k += base) {\n          var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n\n  return encoded.join('.');\n};","map":{"version":3,"names":["maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexNonASCII","regexSeparators","OVERFLOW_ERROR","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","ucs2decode","string","output","counter","length","value","charCodeAt","extra","push","digitToBasic","digit","adapt","delta","numPoints","firstTime","k","encode","input","inputLength","n","bias","i","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","RangeError","q","t","qMinusT","baseMinusT","join","module","exports","encoded","labels","toLowerCase","replace","split","label","test"],"sources":["/Users/israelgayina/Documents/bookingApp/client/node_modules/core-js/internals/string-punycode-to-ascii.js"],"sourcesContent":["'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}