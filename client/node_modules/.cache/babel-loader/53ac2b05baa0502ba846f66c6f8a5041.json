{"ast":null,"code":"var $ = require('../internals/export');\n\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar fromCharCode = String.fromCharCode;\nvar nativeFromCodePoint = String.fromCodePoint; // length should be 1, old FF problem\n\nvar INCORRECT_LENGTH = !!nativeFromCodePoint && nativeFromCodePoint.length != 1; // `String.fromCodePoint` method\n// https://tc39.github.io/ecma262/#sec-string.fromcodepoint\n\n$({\n  target: 'String',\n  stat: true,\n  forced: INCORRECT_LENGTH\n}, {\n  fromCodePoint: function fromCodePoint(x) {\n    // eslint-disable-line no-unused-vars\n    var elements = [];\n    var length = arguments.length;\n    var i = 0;\n    var code;\n\n    while (length > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');\n      elements.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00));\n    }\n\n    return elements.join('');\n  }\n});","map":{"version":3,"names":["$","require","toAbsoluteIndex","fromCharCode","String","nativeFromCodePoint","fromCodePoint","INCORRECT_LENGTH","length","target","stat","forced","x","elements","arguments","i","code","RangeError","push","join"],"sources":["/Users/israelgayina/Documents/bookingApp/client/node_modules/core-js/modules/es.string.from-code-point.js"],"sourcesContent":["var $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar fromCharCode = String.fromCharCode;\nvar nativeFromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\nvar INCORRECT_LENGTH = !!nativeFromCodePoint && nativeFromCodePoint.length != 1;\n\n// `String.fromCodePoint` method\n// https://tc39.github.io/ecma262/#sec-string.fromcodepoint\n$({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var elements = [];\n    var length = arguments.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');\n      elements.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00)\n      );\n    } return elements.join('');\n  }\n});\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,gCAAD,CAA7B;;AAEA,IAAIE,YAAY,GAAGC,MAAM,CAACD,YAA1B;AACA,IAAIE,mBAAmB,GAAGD,MAAM,CAACE,aAAjC,C,CAEA;;AACA,IAAIC,gBAAgB,GAAG,CAAC,CAACF,mBAAF,IAAyBA,mBAAmB,CAACG,MAApB,IAA8B,CAA9E,C,CAEA;AACA;;AACAR,CAAC,CAAC;EAAES,MAAM,EAAE,QAAV;EAAoBC,IAAI,EAAE,IAA1B;EAAgCC,MAAM,EAAEJ;AAAxC,CAAD,EAA6D;EAC5DD,aAAa,EAAE,SAASA,aAAT,CAAuBM,CAAvB,EAA0B;IAAE;IACzC,IAAIC,QAAQ,GAAG,EAAf;IACA,IAAIL,MAAM,GAAGM,SAAS,CAACN,MAAvB;IACA,IAAIO,CAAC,GAAG,CAAR;IACA,IAAIC,IAAJ;;IACA,OAAOR,MAAM,GAAGO,CAAhB,EAAmB;MACjBC,IAAI,GAAG,CAACF,SAAS,CAACC,CAAC,EAAF,CAAjB;MACA,IAAIb,eAAe,CAACc,IAAD,EAAO,QAAP,CAAf,KAAoCA,IAAxC,EAA8C,MAAMC,UAAU,CAACD,IAAI,GAAG,4BAAR,CAAhB;MAC9CH,QAAQ,CAACK,IAAT,CAAcF,IAAI,GAAG,OAAP,GACVb,YAAY,CAACa,IAAD,CADF,GAEVb,YAAY,CAAC,CAAC,CAACa,IAAI,IAAI,OAAT,KAAqB,EAAtB,IAA4B,MAA7B,EAAqCA,IAAI,GAAG,KAAP,GAAe,MAApD,CAFhB;IAID;;IAAC,OAAOH,QAAQ,CAACM,IAAT,CAAc,EAAd,CAAP;EACH;AAd2D,CAA7D,CAAD"},"metadata":{},"sourceType":"script"}