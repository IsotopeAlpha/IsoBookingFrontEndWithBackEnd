{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar toInteger = require('../internals/to-integer');\n\nvar toLength = require('../internals/to-length');\n\nvar toObject = require('../internals/to-object');\n\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar createProperty = require('../internals/create-property');\n\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', {\n  ACCESSORS: true,\n  0: 0,\n  1: 2\n});\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded'; // `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH\n}, {\n  splice: function splice(start, deleteCount\n  /* , ...items */\n  ) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n\n    A = arraySpeciesCreate(O, actualDeleteCount);\n\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n\n    A.length = actualDeleteCount;\n\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];else delete O[to];\n      }\n\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];else delete O[to];\n      }\n    }\n\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});","map":{"version":3,"names":["$","require","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","ACCESSORS","max","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","splice","start","deleteCount","O","len","length","actualStart","argumentsLength","arguments","insertCount","actualDeleteCount","A","k","from","to","TypeError"],"sources":["/Users/israelgayina/Documents/bookingApp/client/node_modules/core-js/modules/es.array.splice.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,mCAAD,CAAhC;;AACA,IAAIM,cAAc,GAAGN,OAAO,CAAC,8BAAD,CAA5B;;AACA,IAAIO,4BAA4B,GAAGP,OAAO,CAAC,+CAAD,CAA1C;;AACA,IAAIQ,uBAAuB,GAAGR,OAAO,CAAC,0CAAD,CAArC;;AAEA,IAAIS,mBAAmB,GAAGF,4BAA4B,CAAC,QAAD,CAAtD;AACA,IAAIG,cAAc,GAAGF,uBAAuB,CAAC,QAAD,EAAW;EAAEG,SAAS,EAAE,IAAb;EAAmB,GAAG,CAAtB;EAAyB,GAAG;AAA5B,CAAX,CAA5C;AAEA,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAf;AACA,IAAIE,GAAG,GAAGD,IAAI,CAACC,GAAf;AACA,IAAIC,gBAAgB,GAAG,gBAAvB;AACA,IAAIC,+BAA+B,GAAG,iCAAtC,C,CAEA;AACA;AACA;;AACAjB,CAAC,CAAC;EAAEkB,MAAM,EAAE,OAAV;EAAmBC,KAAK,EAAE,IAA1B;EAAgCC,MAAM,EAAE,CAACV,mBAAD,IAAwB,CAACC;AAAjE,CAAD,EAAoF;EACnFU,MAAM,EAAE,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC;EAAY;EAAnC,EAAqD;IAC3D,IAAIC,CAAC,GAAGnB,QAAQ,CAAC,IAAD,CAAhB;IACA,IAAIoB,GAAG,GAAGrB,QAAQ,CAACoB,CAAC,CAACE,MAAH,CAAlB;IACA,IAAIC,WAAW,GAAGzB,eAAe,CAACoB,KAAD,EAAQG,GAAR,CAAjC;IACA,IAAIG,eAAe,GAAGC,SAAS,CAACH,MAAhC;IACA,IAAII,WAAJ,EAAiBC,iBAAjB,EAAoCC,CAApC,EAAuCC,CAAvC,EAA0CC,IAA1C,EAAgDC,EAAhD;;IACA,IAAIP,eAAe,KAAK,CAAxB,EAA2B;MACzBE,WAAW,GAAGC,iBAAiB,GAAG,CAAlC;IACD,CAFD,MAEO,IAAIH,eAAe,KAAK,CAAxB,EAA2B;MAChCE,WAAW,GAAG,CAAd;MACAC,iBAAiB,GAAGN,GAAG,GAAGE,WAA1B;IACD,CAHM,MAGA;MACLG,WAAW,GAAGF,eAAe,GAAG,CAAhC;MACAG,iBAAiB,GAAGhB,GAAG,CAACF,GAAG,CAACV,SAAS,CAACoB,WAAD,CAAV,EAAyB,CAAzB,CAAJ,EAAiCE,GAAG,GAAGE,WAAvC,CAAvB;IACD;;IACD,IAAIF,GAAG,GAAGK,WAAN,GAAoBC,iBAApB,GAAwCf,gBAA5C,EAA8D;MAC5D,MAAMoB,SAAS,CAACnB,+BAAD,CAAf;IACD;;IACDe,CAAC,GAAG1B,kBAAkB,CAACkB,CAAD,EAAIO,iBAAJ,CAAtB;;IACA,KAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,iBAAhB,EAAmCE,CAAC,EAApC,EAAwC;MACtCC,IAAI,GAAGP,WAAW,GAAGM,CAArB;MACA,IAAIC,IAAI,IAAIV,CAAZ,EAAejB,cAAc,CAACyB,CAAD,EAAIC,CAAJ,EAAOT,CAAC,CAACU,IAAD,CAAR,CAAd;IAChB;;IACDF,CAAC,CAACN,MAAF,GAAWK,iBAAX;;IACA,IAAID,WAAW,GAAGC,iBAAlB,EAAqC;MACnC,KAAKE,CAAC,GAAGN,WAAT,EAAsBM,CAAC,GAAGR,GAAG,GAAGM,iBAAhC,EAAmDE,CAAC,EAApD,EAAwD;QACtDC,IAAI,GAAGD,CAAC,GAAGF,iBAAX;QACAI,EAAE,GAAGF,CAAC,GAAGH,WAAT;QACA,IAAII,IAAI,IAAIV,CAAZ,EAAeA,CAAC,CAACW,EAAD,CAAD,GAAQX,CAAC,CAACU,IAAD,CAAT,CAAf,KACK,OAAOV,CAAC,CAACW,EAAD,CAAR;MACN;;MACD,KAAKF,CAAC,GAAGR,GAAT,EAAcQ,CAAC,GAAGR,GAAG,GAAGM,iBAAN,GAA0BD,WAA5C,EAAyDG,CAAC,EAA1D,EAA8D,OAAOT,CAAC,CAACS,CAAC,GAAG,CAAL,CAAR;IAC/D,CARD,MAQO,IAAIH,WAAW,GAAGC,iBAAlB,EAAqC;MAC1C,KAAKE,CAAC,GAAGR,GAAG,GAAGM,iBAAf,EAAkCE,CAAC,GAAGN,WAAtC,EAAmDM,CAAC,EAApD,EAAwD;QACtDC,IAAI,GAAGD,CAAC,GAAGF,iBAAJ,GAAwB,CAA/B;QACAI,EAAE,GAAGF,CAAC,GAAGH,WAAJ,GAAkB,CAAvB;QACA,IAAII,IAAI,IAAIV,CAAZ,EAAeA,CAAC,CAACW,EAAD,CAAD,GAAQX,CAAC,CAACU,IAAD,CAAT,CAAf,KACK,OAAOV,CAAC,CAACW,EAAD,CAAR;MACN;IACF;;IACD,KAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,WAAhB,EAA6BG,CAAC,EAA9B,EAAkC;MAChCT,CAAC,CAACS,CAAC,GAAGN,WAAL,CAAD,GAAqBE,SAAS,CAACI,CAAC,GAAG,CAAL,CAA9B;IACD;;IACDT,CAAC,CAACE,MAAF,GAAWD,GAAG,GAAGM,iBAAN,GAA0BD,WAArC;IACA,OAAOE,CAAP;EACD;AA9CkF,CAApF,CAAD"},"metadata":{},"sourceType":"script"}